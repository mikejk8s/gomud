version: '3'
services:
  db:
    image: bitnami/postgresql:latest
    container_name: postgres
    volumes:
      - 'db_data:/bitnami/postgresql'
      - './sql/initdecoy.sql:/initdb/init.sql'
    restart: always
    tty: true
    env_file:
      - prod.env
    # environment:
    #   - POSTGRES_USER=${POSTGRES_USER}
    #   - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    #   - POSTGRES_USERS_DB=${POSTGRES_USERS_DB}
    #   - POSTGRES_CHARACTERS_DB=${POSTGRES_CHARACTERS_DB}
    #   - POSTGRES_INITDB_ARGS=--username=postgres --pwfile=<(echo "$$POSTGRES_PASSWORD") -E UTF8 --lc-collate=en_US.UTF-8 --lc-ctype=en_US.UTF-8
    #   - POSTGRES_INITDB_WALDIR=/bitnami/postgresql/wal
    #   - POSTGRES_INITDB_XLOGDIR=/bitnami/postgresql/xlog
    #   - POSTGRES_INITDB_EXTRA_FLAGS=-U postgres --pwfile=<(echo "$$POSTGRES_PASSWORD") --auth=trust
    #   - POSTGRES_INITDB_SETROLE=gmud
    networks:
      - dev
    healthcheck:
      test: "/opt/bitnami/postgresql/bin/pg_isready -U $$POSTGRES_USER -d users"
      timeout: 60s
      retries: 60

  mud:
    container_name: gmud
    restart: always
    build:
      context: .
      dockerfile: ./Dockerfile.gmud
    volumes:
    - app:/approot
    env_file:
      - prod.env
    environment:
      - WAIT_HOSTS=postgres:5432
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=30
      - WAIT_HOST_CONNECT_TIMEOUT=30
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USERS_DB=${POSTGRES_USERS_DB}
      - POSTGRES_CHARACTERS_DB=${POSTGRES_CHARACTERS_DB}
      - POSTGRES_SSLMODE=${POSTGRES_SSLMODE}
      - POSTGRES_PORT=5432
      - PGHOST=postgres
      - PGPORT=5432
      - RUNNING_ON_DOCKER=true
      - WEBPAGE_HOST=127.0.0.1
      - WEBPAGE_PORT=6969
      - TCP_HOST=127.0.0.1
      - TCP_PORT=3131
      - PGSSLMODE=disable

    ports:
      - "2222:2222"
      - "8081:8081"
    depends_on:
      - db
    networks:
      - dev

volumes:
  db_data:
  app:

networks:
  dev:
    driver: bridge